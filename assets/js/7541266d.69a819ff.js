"use strict";(self.webpackChunknvr_wiki=self.webpackChunknvr_wiki||[]).push([[1192],{467:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>c,frontMatter:()=>d,metadata:()=>t,toc:()=>o});var l=s(4848),i=s(8453);const d={},r="Bloom",t={id:"Shaders/Bloom",title:"Bloom",description:"---",source:"@site/docs/Shaders/Bloom.md",sourceDirName:"Shaders",slug:"/Shaders/Bloom",permalink:"/nvr-wiki/docs/Shaders/Bloom",draft:!1,unlisted:!1,editUrl:"https://github.com/dlpnd/nvr-wiki/edit/master/docs/Shaders/Bloom.md",tags:[],version:"current",frontMatter:{},sidebar:"introductionSidebar",previous:{title:"BloodLens",permalink:"/nvr-wiki/docs/Shaders/BloodLens"},next:{title:"BloomLegacy",permalink:"/nvr-wiki/docs/Shaders/BloomLegacy"}},a={},o=[{value:"Main",id:"main",level:2},{value:"Blending",id:"blending",level:3},{value:"Strength",id:"strength",level:3},{value:"Passes",id:"passes",level:3},{value:"PassBlending",id:"passblending",level:3},{value:"Night",id:"night",level:2},{value:"Blending",id:"blending-1",level:3},{value:"Strength",id:"strength-1",level:3},{value:"Passes",id:"passes-1",level:3},{value:"PassBlending",id:"passblending-1",level:3},{value:"Interiors",id:"interiors",level:2},{value:"Blending",id:"blending-2",level:3},{value:"Strength",id:"strength-2",level:3},{value:"Passes",id:"passes-2",level:3},{value:"PassBlending",id:"passblending-2",level:3},{value:"Status",id:"status",level:2},{value:"Enabled",id:"enabled",level:3}];function h(e){const n={blockquote:"blockquote",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",p:"p",...(0,i.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"bloom",children:"Bloom"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"main",children:"Main"}),"\n",(0,l.jsx)(n.h3,{id:"blending",children:"Blending"}),"\n",(0,l.jsx)(n.p,{children:"Blending between the base and bloom. Low values are preferable. Works for NVR and vanilla."}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsx)(n.p,{children:"Default: 0.04"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"strength",children:"Strength"}),"\n",(0,l.jsx)(n.p,{children:"Scales the bloom. Works for NVR and vanilla."}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsx)(n.p,{children:"Default: 1.0"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"passes",children:"Passes"}),"\n",(0,l.jsx)(n.p,{children:"Passes to apply, 2-8."}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsx)(n.p,{children:"Default: 8"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"passblending",children:"PassBlending"}),"\n",(0,l.jsx)(n.p,{children:"0: Use additive blending, 0-1: Linear blending coefficient."}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsx)(n.p,{children:"Default: 0.0"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"night",children:"Night"}),"\n",(0,l.jsx)(n.h3,{id:"blending-1",children:"Blending"}),"\n",(0,l.jsx)(n.p,{children:"Blending between the base and bloom. Low values are preferable. Works for NVR and vanilla."}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsx)(n.p,{children:"Default: 0.04"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"strength-1",children:"Strength"}),"\n",(0,l.jsx)(n.p,{children:"Scales the bloom. Works for NVR and vanilla."}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsx)(n.p,{children:"Default: 1.0"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"passes-1",children:"Passes"}),"\n",(0,l.jsx)(n.p,{children:"Passes to apply, 2-8."}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsx)(n.p,{children:"Default: 8"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"passblending-1",children:"PassBlending"}),"\n",(0,l.jsx)(n.p,{children:"0: Use additive blending, 0-1: Linear blending coefficient."}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsx)(n.p,{children:"Default: 0.0"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"interiors",children:"Interiors"}),"\n",(0,l.jsx)(n.h3,{id:"blending-2",children:"Blending"}),"\n",(0,l.jsx)(n.p,{children:"Blending between the base and bloom. Low values are preferable. Works for NVR and vanilla."}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsx)(n.p,{children:"Default: 0.04"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"strength-2",children:"Strength"}),"\n",(0,l.jsx)(n.p,{children:"Scales the bloom. Works for NVR and vanilla."}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsx)(n.p,{children:"Default: 1.0"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"passes-2",children:"Passes"}),"\n",(0,l.jsx)(n.p,{children:"Passes to apply, 2-8."}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsx)(n.p,{children:"Default: 8"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"passblending-2",children:"PassBlending"}),"\n",(0,l.jsx)(n.p,{children:"0: Use additive blending, 0-1: Linear blending coefficient."}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsx)(n.p,{children:"Default: 0.0"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"status",children:"Status"}),"\n",(0,l.jsx)(n.h3,{id:"enabled",children:"Enabled"}),"\n",(0,l.jsx)(n.p,{children:"Replace the vanilla bloom. Requires tonemapping shader to be applied. Also impacts Dirt Lens and Rain shaders"}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsx)(n.p,{children:"Default: true"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{})]})}function c(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(h,{...e})}):h(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>t});var l=s(6540);const i={},d=l.createContext(i);function r(e){const n=l.useContext(d);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),l.createElement(d.Provider,{value:n},e.children)}}}]);