"use strict";(self.webpackChunknvr_wiki=self.webpackChunknvr_wiki||[]).push([[5556],{3888:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>h,frontMatter:()=>t,metadata:()=>a,toc:()=>c});var i=s(7624),l=s(2172);const t={},r="Grass",a={id:"Shaders/Grass",title:"Grass",description:"---",source:"@site/docs/Shaders/Grass.md",sourceDirName:"Shaders",slug:"/Shaders/Grass",permalink:"/nvr-wiki/docs/Shaders/Grass",draft:!1,unlisted:!1,editUrl:"https://github.com/dlpnd/nvr-wiki/edit/master/docs/Shaders/Grass.md",tags:[],version:"current",frontMatter:{},sidebar:"introductionSidebar",previous:{title:"GodRays",permalink:"/nvr-wiki/docs/Shaders/GodRays"},next:{title:"ImageAdjust",permalink:"/nvr-wiki/docs/Shaders/ImageAdjust"}},d={},c=[{value:"Main",id:"main",level:2},{value:"WindEnabled",id:"windenabled",level:3},{value:"GrassDensity",id:"grassdensity",level:3},{value:"WindCoefficient",id:"windcoefficient",level:3},{value:"ScaleX",id:"scalex",level:3},{value:"ScaleY",id:"scaley",level:3},{value:"ScaleZ",id:"scalez",level:3},{value:"MinDistance",id:"mindistance",level:3},{value:"MaxDistance",id:"maxdistance",level:3},{value:"Status",id:"status",level:2},{value:"Enabled",id:"enabled",level:3}];function o(e){const n={blockquote:"blockquote",h1:"h1",h2:"h2",h3:"h3",hr:"hr",p:"p",...(0,l.M)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"grass",children:"Grass"}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"main",children:"Main"}),"\n",(0,i.jsx)(n.h3,{id:"windenabled",children:"WindEnabled"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"Default: false"}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"grassdensity",children:"GrassDensity"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"Default: 1"}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"windcoefficient",children:"WindCoefficient"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"Default: 0.0"}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"scalex",children:"ScaleX"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"Default: 1.0"}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"scaley",children:"ScaleY"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"Default: 1.0"}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"scalez",children:"ScaleZ"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"Default: 1.0"}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"mindistance",children:"MinDistance"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"Default: 0"}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"maxdistance",children:"MaxDistance"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"Default: 0"}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"status",children:"Status"}),"\n",(0,i.jsx)(n.h3,{id:"enabled",children:"Enabled"}),"\n",(0,i.jsx)(n.p,{children:"Not currently used. Replaces grass shaders and game options."}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"Default: false"}),"\n"]}),"\n",(0,i.jsx)(n.hr,{})]})}function h(e={}){const{wrapper:n}={...(0,l.M)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},2172:(e,n,s)=>{s.d(n,{I:()=>a,M:()=>r});var i=s(1504);const l={},t=i.createContext(l);function r(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:r(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);