"use strict";(self.webpackChunknvr_wiki=self.webpackChunknvr_wiki||[]).push([[474],{3905:(e,r,t)=>{t.d(r,{Zo:()=>d,kt:()=>h});var n=t(7294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=n.createContext({}),c=function(e){var r=n.useContext(s),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},d=function(e){var r=c(e.components);return n.createElement(s.Provider,{value:r},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},f=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=c(t),f=a,h=u["".concat(s,".").concat(f)]||u[f]||p[f]||o;return t?n.createElement(h,i(i({ref:r},d),{},{components:t})):n.createElement(h,i({ref:r},d))}));function h(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=f;var l={};for(var s in r)hasOwnProperty.call(r,s)&&(l[s]=r[s]);l.originalType=e,l[u]="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=t[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}f.displayName="MDXCreateElement"},1489:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var n=t(7462),a=(t(7294),t(3905));const o={},i="ExtraShaders",l={unversionedId:"Shaders/ExtraShaders",id:"Shaders/ExtraShaders",title:"ExtraShaders",description:"---",source:"@site/docs/Shaders/ExtraShaders.md",sourceDirName:"Shaders",slug:"/Shaders/ExtraShaders",permalink:"/nvr-wiki/docs/Shaders/ExtraShaders",draft:!1,editUrl:"https://github.com/dlpnd/nvr-wiki/edit/master/docs/Shaders/ExtraShaders.md",tags:[],version:"current",frontMatter:{},sidebar:"introductionSidebar",previous:{title:"ExtraEffects",permalink:"/nvr-wiki/docs/Shaders/ExtraEffects"},next:{title:"GodRays",permalink:"/nvr-wiki/docs/Shaders/GodRays"}},s={},c=[{value:"Status",id:"status",level:2},{value:"Enabled",id:"enabled",level:3}],d={toc:c},u="wrapper";function p(e){let{components:r,...t}=e;return(0,a.kt)(u,(0,n.Z)({},d,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"extrashaders"},"ExtraShaders"),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"status"},"Status"),(0,a.kt)("h3",{id:"enabled"},"Enabled"),(0,a.kt)("p",null," Not currently used. Enables loading of Shaders in ExtraShaders folder that are not natively handled."),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Default: false")),(0,a.kt)("hr",null))}p.isMDXComponent=!0}}]);