"use strict";(self.webpackChunknvr_wiki=self.webpackChunknvr_wiki||[]).push([[2436],{6912:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>r,contentTitle:()=>o,default:()=>g,frontMatter:()=>h,metadata:()=>s,toc:()=>d});var t=i(4848),l=i(8453);const h={},o="VolumetricFog",s={id:"Shaders/VolumetricFog",title:"VolumetricFog",description:"---",source:"@site/docs/Shaders/VolumetricFog.md",sourceDirName:"Shaders",slug:"/Shaders/VolumetricFog",permalink:"/nvr-wiki/docs/Shaders/VolumetricFog",draft:!1,unlisted:!1,editUrl:"https://github.com/dlpnd/nvr-wiki/edit/master/docs/Shaders/VolumetricFog.md",tags:[],version:"current",frontMatter:{},sidebar:"introductionSidebar",previous:{title:"Underwater",permalink:"/nvr-wiki/docs/Shaders/Underwater"},next:{title:"Water",permalink:"/nvr-wiki/docs/Shaders/Water"}},r={},d=[{value:"Main",id:"main",level:2},{value:"Amount",id:"amount",level:3},{value:"SunPower",id:"sunpower",level:3},{value:"FogSaturation",id:"fogsaturation",level:3},{value:"MinimumBaseFog",id:"minimumbasefog",level:3},{value:"WeatherImpact",id:"weatherimpact",level:3},{value:"DistantFogRange",id:"distantfogrange",level:3},{value:"DistantFogBlend",id:"distantfogblend",level:3},{value:"DistantFogHeight",id:"distantfogheight",level:3},{value:"HeightFogDensity",id:"heightfogdensity",level:3},{value:"HeightFogFalloff",id:"heightfogfalloff",level:3},{value:"HeightFogDist",id:"heightfogdist",level:3},{value:"HeightFogSkyColor",id:"heightfogskycolor",level:3},{value:"HeightFogHeight",id:"heightfogheight",level:3},{value:"HeightFogBlend",id:"heightfogblend",level:3},{value:"HeightFogRolloff",id:"heightfogrolloff",level:3},{value:"Extinction",id:"extinction",level:3},{value:"Inscattering",id:"inscattering",level:3},{value:"FogNight",id:"fognight",level:3},{value:"SimpleFogSkyColor",id:"simplefogskycolor",level:3},{value:"SimpleFogHeight",id:"simplefogheight",level:3},{value:"SimpleFogBlend",id:"simplefogblend",level:3},{value:"Interiors",id:"interiors",level:2},{value:"Amount",id:"amount-1",level:3},{value:"FogSaturation",id:"fogsaturation-1",level:3},{value:"MinimumBaseFog",id:"minimumbasefog-1",level:3},{value:"WeatherImpact",id:"weatherimpact-1",level:3},{value:"HeightFogDensity",id:"heightfogdensity-1",level:3},{value:"HeightFogFalloff",id:"heightfogfalloff-1",level:3},{value:"HeightFogDist",id:"heightfogdist-1",level:3},{value:"HeightFogHeight",id:"heightfogheight-1",level:3},{value:"HeightFogBlend",id:"heightfogblend-1",level:3},{value:"HeightFogRolloff",id:"heightfogrolloff-1",level:3},{value:"Extinction",id:"extinction-1",level:3},{value:"Inscattering",id:"inscattering-1",level:3},{value:"SimpleFogHeight",id:"simplefogheight-1",level:3},{value:"SimpleFogBlend",id:"simplefogblend-1",level:3},{value:"Status",id:"status",level:2},{value:"Enabled",id:"enabled",level:3}];function c(e){const n={blockquote:"blockquote",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",p:"p",...(0,l.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"volumetricfog",children:"VolumetricFog"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"main",children:"Main"}),"\n",(0,t.jsx)(n.h3,{id:"amount",children:"Amount"}),"\n",(0,t.jsx)(n.p,{children:"Global multiplier for fog strength in exteriors"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"Default: 1.0"}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"sunpower",children:"SunPower"}),"\n",(0,t.jsx)(n.p,{children:"Controls the influence of Sun Color when shining through fog"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"Default: 0.2"}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"fogsaturation",children:"FogSaturation"}),"\n",(0,t.jsx)(n.p,{children:"Tune the saturation of the fog"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"Default: 1.7"}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"minimumbasefog",children:"MinimumBaseFog"}),"\n",(0,t.jsx)(n.p,{children:"How much fog will be present as a base line when weather has no fog"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"Default: 0.2"}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"weatherimpact",children:"WeatherImpact"}),"\n",(0,t.jsx)(n.p,{children:"How much the fog will scale with weather fog strength"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"Default: 0.6"}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"distantfogrange",children:"DistantFogRange"}),"\n",(0,t.jsx)(n.p,{children:"Range of the distance fog that blends moutains into the sky."}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"Default: 0.9"}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"distantfogblend",children:"DistantFogBlend"}),"\n",(0,t.jsx)(n.p,{children:"Blending power of the distant fog"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"Default: 0.3"}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"distantfogheight",children:"DistantFogHeight"}),"\n",(0,t.jsx)(n.p,{children:"Height limit for the distant fog. If set to 0, will use the sky as a mask."}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"Default: 0.3"}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"heightfogdensity",children:"HeightFogDensity"}),"\n",(0,t.jsx)(n.p,{children:"Density multiplier for the general height fog"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"Default: 0.6"}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"heightfogfalloff",children:"HeightFogFalloff"}),"\n",(0,t.jsx)(n.p,{children:"Vertical falloff of atmospheric height fog,"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"Default: 50.0"}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"heightfogdist",children:"HeightFogDist"}),"\n",(0,t.jsx)(n.p,{children:"Distance multiplier for Height fog. Pushes back the fog."}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"Default: 0.3"}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"heightfogskycolor",children:"HeightFogSkyColor"}),"\n",(0,t.jsx)(n.p,{children:"Strong fogs will use the weather fog color instead of the sky. This setting changes how strong the fog should be for that."}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"Default: 4.0"}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"heightfogheight",children:"HeightFogHeight"}),"\n",(0,t.jsx)(n.p,{children:'"Sea level" from which the Height fog starts to decrease.'}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"Default: 3.0"}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"heightfogblend",children:"HeightFogBlend"}),"\n",(0,t.jsx)(n.p,{children:"General strength of the impact of Height fog on the final look."}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"Default: 1.0"}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"heightfogrolloff",children:"HeightFogRolloff"}),"\n",(0,t.jsx)(n.p,{children:"Pushes back the Height fog without changing the far distance. Changes the curve of progression"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"Default: 1.3"}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"extinction",children:"Extinction"}),"\n",(0,t.jsx)(n.p,{children:"Light lost due to absorption of particles when seen throught the fog."}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"Default: 3.0"}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"inscattering",children:"Inscattering"}),"\n",(0,t.jsx)(n.p,{children:"Light gained from light scattering when seen through the fog."}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"Default: 1.9"}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"fognight",children:"FogNight"}),"\n",(0,t.jsx)(n.p,{children:"Scales the fog distances at night."}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"Default: 2.0"}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"simplefogskycolor",children:"SimpleFogSkyColor"}),"\n",(0,t.jsx)(n.p,{children:"Strong fogs will use the weather fog color instead of the sky. This setting changes how strong the fog should be for that."}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"Default: 20.0"}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"simplefogheight",children:"SimpleFogHeight"}),"\n",(0,t.jsx)(n.p,{children:"Limit the sky influence/height rate of dissipation for simple fog."}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"Default: 0.5"}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"simplefogblend",children:"SimpleFogBlend"}),"\n",(0,t.jsx)(n.p,{children:"General strength of the impact of simple fog on the final look."}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"Default: 1.0"}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"interiors",children:"Interiors"}),"\n",(0,t.jsx)(n.h3,{id:"amount-1",children:"Amount"}),"\n",(0,t.jsx)(n.p,{children:"Global multiplier for fog strength in interiors"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"Default: 1.0"}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"fogsaturation-1",children:"FogSaturation"}),"\n",(0,t.jsx)(n.p,{children:"Tune the saturation of the fog"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"Default: 1.7"}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"minimumbasefog-1",children:"MinimumBaseFog"}),"\n",(0,t.jsx)(n.p,{children:"How much fog will be present as a base line when weather has no fog"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"Default: 0.2"}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"weatherimpact-1",children:"WeatherImpact"}),"\n",(0,t.jsx)(n.p,{children:"How much the fog will scale with weather fog strength"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"Default: 0.6"}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"heightfogdensity-1",children:"HeightFogDensity"}),"\n",(0,t.jsx)(n.p,{children:"Density multiplier for the general height fog"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"Default: 0.6"}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"heightfogfalloff-1",children:"HeightFogFalloff"}),"\n",(0,t.jsx)(n.p,{children:"Vertical falloff of atmospheric height fog,"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"Default: 50.0"}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"heightfogdist-1",children:"HeightFogDist"}),"\n",(0,t.jsx)(n.p,{children:"Distance multiplier for Height fog. Pushes back the fog."}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"Default: 0.3"}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"heightfogheight-1",children:"HeightFogHeight"}),"\n",(0,t.jsx)(n.p,{children:'"Sea level" from which the Height fog starts to decrease.'}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"Default: 3.0"}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"heightfogblend-1",children:"HeightFogBlend"}),"\n",(0,t.jsx)(n.p,{children:"General strength of the impact of Height fog on the final look."}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"Default: 1.0"}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"heightfogrolloff-1",children:"HeightFogRolloff"}),"\n",(0,t.jsx)(n.p,{children:"Pushes back the Height fog without changing the far distance. Changes the curve of progression"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"Default: 1.3"}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"extinction-1",children:"Extinction"}),"\n",(0,t.jsx)(n.p,{children:"Light lost due to absorption of particles when seen throught the fog."}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"Default: 3.0"}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"inscattering-1",children:"Inscattering"}),"\n",(0,t.jsx)(n.p,{children:"Light gained from light scattering when seen through the fog."}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"Default: 1.9"}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"simplefogheight-1",children:"SimpleFogHeight"}),"\n",(0,t.jsx)(n.p,{children:"Limit the sky influence/height rate of dissipation for simple fog."}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"Default: 0.5"}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"simplefogblend-1",children:"SimpleFogBlend"}),"\n",(0,t.jsx)(n.p,{children:"General strength of the impact of simple fog on the final look."}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"Default: 1.0"}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"status",children:"Status"}),"\n",(0,t.jsx)(n.h3,{id:"enabled",children:"Enabled"}),"\n",(0,t.jsx)(n.p,{children:"Volumetric fog shader tinted by the sun. Rendered after shadows and other effects for more accurate effect."}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"Default: true"}),"\n"]}),"\n",(0,t.jsx)(n.hr,{})]})}function g(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>s});var t=i(6540);const l={},h=t.createContext(l);function o(e){const n=t.useContext(h);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:o(e.components),t.createElement(h.Provider,{value:n},e.children)}}}]);