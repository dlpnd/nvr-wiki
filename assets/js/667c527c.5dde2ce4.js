"use strict";(self.webpackChunknvr_wiki=self.webpackChunknvr_wiki||[]).push([[2438],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var r=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,l=function(e,t){if(null==e)return{};var n,r,l={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var u=r.createContext({}),i=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=i(e.components);return r.createElement(u.Provider,{value:t},e.children)},p="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},k=r.forwardRef((function(e,t){var n=e.components,l=e.mdxType,a=e.originalType,u=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=i(n),k=l,d=p["".concat(u,".").concat(k)]||p[k]||h[k]||a;return n?r.createElement(d,o(o({ref:t},c),{},{components:n})):r.createElement(d,o({ref:t},c))}));function d(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var a=n.length,o=new Array(a);o[0]=k;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s[p]="string"==typeof e?e:l,o[1]=s;for(var i=2;i<a;i++)o[i]=n[i];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}k.displayName="MDXCreateElement"},2572:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>s,toc:()=>i});var r=n(7462),l=(n(7294),n(3905));const a={},o="Sky",s={unversionedId:"Shaders/Sky",id:"Shaders/Sky",title:"Sky",description:"---",source:"@site/docs/Shaders/Sky.md",sourceDirName:"Shaders",slug:"/Shaders/Sky",permalink:"/nvr-wiki/docs/Shaders/Sky",draft:!1,editUrl:"https://github.com/dlpnd/nvr-wiki/edit/master/docs/Shaders/Sky.md",tags:[],version:"current",frontMatter:{},sidebar:"introductionSidebar",previous:{title:"Skin",permalink:"/nvr-wiki/docs/Shaders/Skin"},next:{title:"Snow",permalink:"/nvr-wiki/docs/Shaders/Snow"}},u={},i=[{value:"Main",id:"main",level:2},{value:"AthmosphereThickness",id:"athmospherethickness",level:3},{value:"SunInfluence",id:"suninfluence",level:3},{value:"SunStrength",id:"sunstrength",level:3},{value:"StarStrength",id:"starstrength",level:3},{value:"Clouds",id:"clouds",level:2},{value:"UseNormals",id:"usenormals",level:3},{value:"SphericalNormals",id:"sphericalnormals",level:3},{value:"Transparency",id:"transparency",level:3},{value:"Brightness",id:"brightness",level:3},{value:"Status",id:"status",level:2},{value:"Enabled",id:"enabled",level:3}],c={toc:i},p="wrapper";function h(e){let{components:t,...n}=e;return(0,l.kt)(p,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"sky"},"Sky"),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"main"},"Main"),(0,l.kt)("h3",{id:"athmospherethickness"},"AthmosphereThickness"),(0,l.kt)("p",null," Determins the height of the athmosphere on the horizon"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Default: 4.0")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"suninfluence"},"SunInfluence"),(0,l.kt)("p",null," How wide a side of the athmosphere will the sky lit up."),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Default: 1.0")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"sunstrength"},"SunStrength"),(0,l.kt)("p",null," How strong is the sun brighness when reflected by athmosphere"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Default: 0.5")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"starstrength"},"StarStrength"),(0,l.kt)("p",null," Multiplier for stars brightness"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Default: 4.0")),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"clouds"},"Clouds"),(0,l.kt)("h3",{id:"usenormals"},"UseNormals"),(0,l.kt)("p",null," EXPERIMENTAL-Uses the R & G channels of the clouds texture to calculate normals for lighting. Requires special textures"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Default: false")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"sphericalnormals"},"SphericalNormals"),(0,l.kt)("p",null," EXPERIMENTAL-Uses this setting if the normals of the clouds point to the center of the panoramic texture"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Default: false")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"transparency"},"Transparency"),(0,l.kt)("p",null," Clouds base transparency"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Default: 0.5")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"brightness"},"Brightness"),(0,l.kt)("p",null," Clouds base brightness"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Default: 0.2")),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"status"},"Status"),(0,l.kt)("h3",{id:"enabled"},"Enabled"),(0,l.kt)("p",null," Replaces the sky and cloud shaders to add more subtle sky shading."),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Default: true")),(0,l.kt)("hr",null))}h.isMDXComponent=!0}}]);