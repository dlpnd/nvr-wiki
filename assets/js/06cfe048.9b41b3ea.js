"use strict";(self.webpackChunknvr_wiki=self.webpackChunknvr_wiki||[]).push([[1627],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},k=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),d=c(n),k=a,f=d["".concat(s,".").concat(k)]||d[k]||p[k]||l;return n?r.createElement(f,i(i({ref:t},u),{},{components:n})):r.createElement(f,i({ref:t},u))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,i=new Array(l);i[0]=k;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[d]="string"==typeof e?e:a,i[1]=o;for(var c=2;c<l;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}k.displayName="MDXCreateElement"},6223:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>l,metadata:()=>o,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const l={},i="Grass",o={unversionedId:"Shaders/Grass",id:"Shaders/Grass",title:"Grass",description:"---",source:"@site/docs/Shaders/Grass.md",sourceDirName:"Shaders",slug:"/Shaders/Grass",permalink:"/nvr-wiki/docs/Shaders/Grass",draft:!1,editUrl:"https://github.com/dlpnd/nvr-wiki/edit/master/docs/Shaders/Grass.md",tags:[],version:"current",frontMatter:{},sidebar:"introductionSidebar",previous:{title:"GodRays",permalink:"/nvr-wiki/docs/Shaders/GodRays"},next:{title:"HDR",permalink:"/nvr-wiki/docs/Shaders/HDR"}},s={},c=[{value:"Main",id:"main",level:2},{value:"WindEnabled",id:"windenabled",level:3},{value:"GrassDensity",id:"grassdensity",level:3},{value:"WindCoefficient",id:"windcoefficient",level:3},{value:"ScaleX",id:"scalex",level:3},{value:"ScaleY",id:"scaley",level:3},{value:"ScaleZ",id:"scalez",level:3},{value:"MinDistance",id:"mindistance",level:3},{value:"MaxDistance",id:"maxdistance",level:3},{value:"Status",id:"status",level:2},{value:"Enabled",id:"enabled",level:3}],u={toc:c},d="wrapper";function p(e){let{components:t,...n}=e;return(0,a.kt)(d,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"grass"},"Grass"),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"main"},"Main"),(0,a.kt)("h3",{id:"windenabled"},"WindEnabled"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Default: false")),(0,a.kt)("h3",{id:"grassdensity"},"GrassDensity"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Default: 1")),(0,a.kt)("h3",{id:"windcoefficient"},"WindCoefficient"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Default: 0.0")),(0,a.kt)("h3",{id:"scalex"},"ScaleX"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Default: 1.0")),(0,a.kt)("h3",{id:"scaley"},"ScaleY"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Default: 1.0")),(0,a.kt)("h3",{id:"scalez"},"ScaleZ"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Default: 1.0")),(0,a.kt)("h3",{id:"mindistance"},"MinDistance"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Default: 0")),(0,a.kt)("h3",{id:"maxdistance"},"MaxDistance"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Default: 0")),(0,a.kt)("h2",{id:"status"},"Status"),(0,a.kt)("h3",{id:"enabled"},"Enabled"),(0,a.kt)("p",null," Not currently used. Replaces grass shaders and game options.  "),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Default: false")))}p.isMDXComponent=!0}}]);