"use strict";(self.webpackChunknvr_wiki=self.webpackChunknvr_wiki||[]).push([["1173"],{8140:function(e,n,s){s.r(n),s.d(n,{metadata:()=>i,contentTitle:()=>a,default:()=>o,assets:()=>d,toc:()=>c,frontMatter:()=>t});var i=JSON.parse('{"id":"Shaders/Grass","title":"Grass","description":"---","source":"@site/docs/Shaders/Grass.md","sourceDirName":"Shaders","slug":"/Shaders/Grass","permalink":"/nvr-wiki/docs/Shaders/Grass","draft":false,"unlisted":false,"editUrl":"https://github.com/dlpnd/nvr-wiki/edit/master/docs/Shaders/Grass.md","tags":[],"version":"current","frontMatter":{},"sidebar":"introductionSidebar","previous":{"title":"GodRays","permalink":"/nvr-wiki/docs/Shaders/GodRays"},"next":{"title":"ImageAdjust","permalink":"/nvr-wiki/docs/Shaders/ImageAdjust"}}'),l=s("5893"),r=s("65");let t={},a="Grass",d={},c=[{value:"Main",id:"main",level:2},{value:"WindEnabled",id:"windenabled",level:3},{value:"GrassDensity",id:"grassdensity",level:3},{value:"WindCoefficient",id:"windcoefficient",level:3},{value:"ScaleX",id:"scalex",level:3},{value:"ScaleY",id:"scaley",level:3},{value:"ScaleZ",id:"scalez",level:3},{value:"MinDistance",id:"mindistance",level:3},{value:"MaxDistance",id:"maxdistance",level:3},{value:"Status",id:"status",level:2},{value:"Enabled",id:"enabled",level:3}];function h(e){let n={blockquote:"blockquote",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",p:"p",...(0,r.a)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"grass",children:"Grass"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"main",children:"Main"}),"\n",(0,l.jsx)(n.h3,{id:"windenabled",children:"WindEnabled"}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsx)(n.p,{children:"Default: false"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"grassdensity",children:"GrassDensity"}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsx)(n.p,{children:"Default: 1"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"windcoefficient",children:"WindCoefficient"}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsx)(n.p,{children:"Default: 0.0"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"scalex",children:"ScaleX"}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsx)(n.p,{children:"Default: 1.0"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"scaley",children:"ScaleY"}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsx)(n.p,{children:"Default: 1.0"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"scalez",children:"ScaleZ"}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsx)(n.p,{children:"Default: 1.0"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"mindistance",children:"MinDistance"}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsx)(n.p,{children:"Default: 0"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"maxdistance",children:"MaxDistance"}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsx)(n.p,{children:"Default: 0"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"status",children:"Status"}),"\n",(0,l.jsx)(n.h3,{id:"enabled",children:"Enabled"}),"\n",(0,l.jsx)(n.p,{children:"Not currently used. Replaces grass shaders and game options."}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsx)(n.p,{children:"Default: false"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{})]})}function o(e={}){let{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(h,{...e})}):h(e)}},65:function(e,n,s){s.d(n,{Z:function(){return a},a:function(){return t}});var i=s(7294);let l={},r=i.createContext(l);function t(e){let n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:t(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);