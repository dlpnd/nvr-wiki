"use strict";(self.webpackChunknvr_wiki=self.webpackChunknvr_wiki||[]).push([[7778],{8413:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>a,frontMatter:()=>t,metadata:()=>h,toc:()=>c});var r=s(4848),l=s(8453);const t={},i="Sky",h={id:"Shaders/Sky",title:"Sky",description:"---",source:"@site/docs/Shaders/Sky.md",sourceDirName:"Shaders",slug:"/Shaders/Sky",permalink:"/nvr-wiki/docs/Shaders/Sky",draft:!1,unlisted:!1,editUrl:"https://github.com/dlpnd/nvr-wiki/edit/master/docs/Shaders/Sky.md",tags:[],version:"current",frontMatter:{},sidebar:"introductionSidebar",previous:{title:"Skin",permalink:"/nvr-wiki/docs/Shaders/Skin"},next:{title:"Snow",permalink:"/nvr-wiki/docs/Shaders/Snow"}},d={},c=[{value:"Main",id:"main",level:2},{value:"AthmosphereThickness",id:"athmospherethickness",level:3},{value:"SunInfluence",id:"suninfluence",level:3},{value:"SunStrength",id:"sunstrength",level:3},{value:"GlareStrength",id:"glarestrength",level:3},{value:"StarStrength",id:"starstrength",level:3},{value:"ReplaceSun",id:"replacesun",level:3},{value:"UseSunDiskColor",id:"usesundiskcolor",level:3},{value:"SunsetR",id:"sunsetr",level:3},{value:"SunsetG",id:"sunsetg",level:3},{value:"SunsetB",id:"sunsetb",level:3},{value:"StarTwinkle",id:"startwinkle",level:3},{value:"Clouds",id:"clouds",level:2},{value:"UseNormals",id:"usenormals",level:3},{value:"SphericalNormals",id:"sphericalnormals",level:3},{value:"Transparency",id:"transparency",level:3},{value:"Brightness",id:"brightness",level:3},{value:"Status",id:"status",level:2},{value:"Enabled",id:"enabled",level:3}];function o(e){const n={blockquote:"blockquote",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",p:"p",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"sky",children:"Sky"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"main",children:"Main"}),"\n",(0,r.jsx)(n.h3,{id:"athmospherethickness",children:"AthmosphereThickness"}),"\n",(0,r.jsx)(n.p,{children:"Determins the height of the athmosphere on the horizon"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"Default: 2.0"}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"suninfluence",children:"SunInfluence"}),"\n",(0,r.jsx)(n.p,{children:"How wide a side of the athmosphere will the sky lit up."}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"Default: 1.0"}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"sunstrength",children:"SunStrength"}),"\n",(0,r.jsx)(n.p,{children:"How strong is the sun brighness when reflected by athmosphere"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"Default: 1.0"}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"glarestrength",children:"GlareStrength"}),"\n",(0,r.jsx)(n.p,{children:"How much influence does the Sun have over Glare, inversed"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"Default: 1.0"}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"starstrength",children:"StarStrength"}),"\n",(0,r.jsx)(n.p,{children:"Multiplier for stars brightness"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"Default: 1.0"}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"replacesun",children:"ReplaceSun"}),"\n",(0,r.jsx)(n.p,{children:"Replaces vanilla sun by a procedural sun for whatever reason"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"Default: false"}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"usesundiskcolor",children:"UseSunDiskColor"}),"\n",(0,r.jsx)(n.p,{children:"Uses the color from the sun disk from the game weather to calculate the sky tint. Otherwise uses the sun lighting"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"Default: false"}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"sunsetr",children:"SunsetR"}),"\n",(0,r.jsx)(n.p,{children:"Color boost for sunset/sunrise sun color (Red)"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"Default: 0.5"}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"sunsetg",children:"SunsetG"}),"\n",(0,r.jsx)(n.p,{children:"Color boost for sunset/sunrise sun color (Green)"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"Default: 0.0"}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"sunsetb",children:"SunsetB"}),"\n",(0,r.jsx)(n.p,{children:"Color boost for sunset/sunrise sun color (Blue)"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"Default: 0.03"}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"startwinkle",children:"StarTwinkle"}),"\n",(0,r.jsx)(n.p,{children:"Speed of the star twinkling"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"Default: 1.0"}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"clouds",children:"Clouds"}),"\n",(0,r.jsx)(n.h3,{id:"usenormals",children:"UseNormals"}),"\n",(0,r.jsx)(n.p,{children:"EXPERIMENTAL-Uses the R & G channels of the clouds texture to calculate normals for lighting. Requires special textures"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"Default: false"}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"sphericalnormals",children:"SphericalNormals"}),"\n",(0,r.jsx)(n.p,{children:"EXPERIMENTAL-Uses this setting if the normals of the clouds point to the center of the panoramic texture"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"Default: true"}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"transparency",children:"Transparency"}),"\n",(0,r.jsx)(n.p,{children:"Clouds base transparency"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"Default: 1.0"}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"brightness",children:"Brightness"}),"\n",(0,r.jsx)(n.p,{children:"Clouds base brightness"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"Default: 1.0"}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"status",children:"Status"}),"\n",(0,r.jsx)(n.h3,{id:"enabled",children:"Enabled"}),"\n",(0,r.jsx)(n.p,{children:"Replaces the sky and cloud shaders to add more subtle sky shading."}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"Default: true"}),"\n"]}),"\n",(0,r.jsx)(n.hr,{})]})}function a(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>h});var r=s(6540);const l={},t=r.createContext(l);function i(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function h(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:i(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);