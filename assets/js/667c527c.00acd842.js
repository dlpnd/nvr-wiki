"use strict";(self.webpackChunknvr_wiki=self.webpackChunknvr_wiki||[]).push([[2438],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var l=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,l)}return n}function u(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,l,r=function(e,t){if(null==e)return{};var n,l,r={},o=Object.keys(e);for(l=0;l<o.length;l++)n=o[l],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(l=0;l<o.length;l++)n=o[l],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=l.createContext({}),i=function(e){var t=l.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):u(u({},t),e)),n},c=function(e){var t=i(e.components);return l.createElement(s.Provider,{value:t},e.children)},k="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},h=l.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,c=a(e,["components","mdxType","originalType","parentName"]),k=i(n),h=r,d=k["".concat(s,".").concat(h)]||k[h]||p[h]||o;return n?l.createElement(d,u(u({ref:t},c),{},{components:n})):l.createElement(d,u({ref:t},c))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,u=new Array(o);u[0]=h;var a={};for(var s in t)hasOwnProperty.call(t,s)&&(a[s]=t[s]);a.originalType=e,a[k]="string"==typeof e?e:r,u[1]=a;for(var i=2;i<o;i++)u[i]=n[i];return l.createElement.apply(null,u)}return l.createElement.apply(null,n)}h.displayName="MDXCreateElement"},2572:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>u,default:()=>p,frontMatter:()=>o,metadata:()=>a,toc:()=>i});var l=n(7462),r=(n(7294),n(3905));const o={},u="Sky",a={unversionedId:"Shaders/Sky",id:"Shaders/Sky",title:"Sky",description:"---",source:"@site/docs/Shaders/Sky.md",sourceDirName:"Shaders",slug:"/Shaders/Sky",permalink:"/nvr-wiki/docs/Shaders/Sky",draft:!1,editUrl:"https://github.com/dlpnd/nvr-wiki/edit/master/docs/Shaders/Sky.md",tags:[],version:"current",frontMatter:{},sidebar:"introductionSidebar",previous:{title:"Skin",permalink:"/nvr-wiki/docs/Shaders/Skin"},next:{title:"Snow",permalink:"/nvr-wiki/docs/Shaders/Snow"}},s={},i=[{value:"Main",id:"main",level:2},{value:"AthmosphereThickness",id:"athmospherethickness",level:3},{value:"SunInfluence",id:"suninfluence",level:3},{value:"SunStrength",id:"sunstrength",level:3},{value:"StarStrength",id:"starstrength",level:3},{value:"ReplaceSun",id:"replacesun",level:3},{value:"SunsetR",id:"sunsetr",level:3},{value:"SunsetG",id:"sunsetg",level:3},{value:"SunsetB",id:"sunsetb",level:3},{value:"Clouds",id:"clouds",level:2},{value:"UseNormals",id:"usenormals",level:3},{value:"SphericalNormals",id:"sphericalnormals",level:3},{value:"Transparency",id:"transparency",level:3},{value:"Brightness",id:"brightness",level:3},{value:"Status",id:"status",level:2},{value:"Enabled",id:"enabled",level:3}],c={toc:i},k="wrapper";function p(e){let{components:t,...n}=e;return(0,r.kt)(k,(0,l.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"sky"},"Sky"),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"main"},"Main"),(0,r.kt)("h3",{id:"athmospherethickness"},"AthmosphereThickness"),(0,r.kt)("p",null," Determins the height of the athmosphere on the horizon"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Default: 4.0")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"suninfluence"},"SunInfluence"),(0,r.kt)("p",null," How wide a side of the athmosphere will the sky lit up."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Default: 1.0")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"sunstrength"},"SunStrength"),(0,r.kt)("p",null," How strong is the sun brighness when reflected by athmosphere"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Default: 0.5")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"starstrength"},"StarStrength"),(0,r.kt)("p",null," Multiplier for stars brightness"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Default: 4.0")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"replacesun"},"ReplaceSun"),(0,r.kt)("p",null," replaces vanilla sun by a procedural sun for whatever reason"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Default: false")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"sunsetr"},"SunsetR"),(0,r.kt)("p",null," Color boost for sunset/sunrise sun color (Red)"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Default: 0.5")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"sunsetg"},"SunsetG"),(0,r.kt)("p",null," Color boost for sunset/sunrise sun color (Green)"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Default: 0.0")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"sunsetb"},"SunsetB"),(0,r.kt)("p",null," Color boost for sunset/sunrise sun color (Blue)"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Default: 0.03")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"clouds"},"Clouds"),(0,r.kt)("h3",{id:"usenormals"},"UseNormals"),(0,r.kt)("p",null," EXPERIMENTAL-Uses the R & G channels of the clouds texture to calculate normals for lighting. Requires special textures"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Default: false")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"sphericalnormals"},"SphericalNormals"),(0,r.kt)("p",null," EXPERIMENTAL-Uses this setting if the normals of the clouds point to the center of the panoramic texture"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Default: false")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"transparency"},"Transparency"),(0,r.kt)("p",null," Clouds base transparency"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Default: 0.5")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"brightness"},"Brightness"),(0,r.kt)("p",null," Clouds base brightness"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Default: 0.2")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"status"},"Status"),(0,r.kt)("h3",{id:"enabled"},"Enabled"),(0,r.kt)("p",null," Replaces the sky and cloud shaders to add more subtle sky shading."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Default: true")),(0,r.kt)("hr",null))}p.isMDXComponent=!0}}]);